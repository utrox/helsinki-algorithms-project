name: Build Python Executable

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      # Build the executable
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile main.py
        # Output will be in the `dist` directory

      # Create a release artifact
      - name: Upload executable to release
        uses: actions/upload-artifact@v3
        with:
          name: my-python-executable
          path: dist/main
    
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: my-python-executable

      # Create a GitHub release and upload the built executable
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: List dist directory (DEBUGGING - verify build)
        run: ls -la dist/
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ./dist/main    # For Linux/macOS
            ./dist/main.exe  # For Windows
          asset_name: main
          asset_content_type: application/octet-stream
